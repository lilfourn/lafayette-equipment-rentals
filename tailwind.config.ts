import type { Config } from "tailwindcss";

const config: Config = {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
    "./lib/**/*.{js,ts,jsx,tsx,mdx}",
    "./styles/**/*.{js,ts,jsx,tsx,mdx}",
    "*.{js,ts,jsx,tsx,mdx}",
    // Force rebuild
  ],
  safelist: [
    // Turquoise colors for lazy-loaded components
    "bg-turquoise-50",
    "bg-turquoise-100",
    "bg-turquoise-200",
    "bg-turquoise-500",
    "bg-turquoise-600",
    "bg-turquoise-700",
    "text-turquoise-300",
    "text-turquoise-400",
    "text-turquoise-500",
    "text-turquoise-600",
    "text-turquoise-700",
    "text-turquoise-800",
    "border-turquoise-200",
    "border-turquoise-300",
    "border-turquoise-400",
    "border-turquoise-500",
    "border-turquoise-700",
    "hover:bg-turquoise-50",
    "hover:bg-turquoise-100",
    "hover:bg-turquoise-600",
    "hover:bg-turquoise-700",
    "hover:text-turquoise-300",
    "hover:text-turquoise-500",
    "hover:text-turquoise-600",
    "hover:text-turquoise-700",
    "hover:border-turquoise-300",
    "hover:border-turquoise-400",
    "hover:border-turquoise-500",
    "from-turquoise-50",
    "from-turquoise-400",
    "from-turquoise-500",
    "from-turquoise-600",
    "to-turquoise-500",
    "to-turquoise-600",
    "to-turquoise-700",
    "hover:from-turquoise-600",
    "hover:to-turquoise-700",
    // Spacing classes that might be used dynamically
    "mt-0",
    "mt-1",
    "mt-2",
    "mt-3",
    "mt-4",
    "mt-5",
    "mt-6",
    "mt-8",
    "mb-0",
    "mb-1",
    "mb-2",
    "mb-3",
    "mb-4",
    "mb-5",
    "mb-6",
    "mb-8",
    "pt-0",
    "pt-1",
    "pt-2",
    "pt-3",
    "pt-4",
    "pt-5",
    "pt-6",
    "pt-8",
    "pb-0",
    "pb-1",
    "pb-2",
    "pb-3",
    "pb-4",
    "pb-5",
    "pb-6",
    "pb-8",
    // Text colors that might be used dynamically
    "text-white",
    "text-gray-300",
    "text-gray-500",
    "text-gray-700",
    "text-gray-900",
    "text-red-500",
    "text-red-600",
    "text-red-700",
    "text-yellow-400",
    "text-yellow-500",
    "text-yellow-600",
    "text-neutral-500",
    "text-neutral-600",
    "text-neutral-700",
    "text-orange-600",
    "text-blue-600",
    "text-purple-600",
    "text-green-600",
    "text-indigo-600",
    "text-pink-600",
    // Background colors
    "bg-white",
    "bg-gray-50",
    "bg-gray-100",
    "bg-gray-200",
    "bg-gray-300",
    "bg-red-50",
    "bg-red-100",
    "bg-red-500",
    "bg-red-600",
    "bg-red-700",
    "from-red-50",
    "from-red-500",
    "from-red-600",
    "to-red-500",
    "to-red-600",
    "to-red-700",
    "via-red-500",
    "hover:from-red-50",
    "hover:to-turquoise-50",
    "hover:from-red-600",
    "hover:to-red-700",
    "border-red-700",
    "bg-yellow-50",
    "bg-yellow-100",
    "bg-yellow-400",
    "bg-yellow-500",
    "bg-neutral-100",
    "bg-neutral-700",
    "bg-neutral-800",
    "bg-orange-50",
    "bg-blue-50",
    "bg-purple-50",
    "bg-green-50",
    "bg-indigo-50",
    "bg-pink-50",
    "bg-orange-100",
    "bg-blue-100",
    "bg-purple-100",
    "bg-green-100",
    "bg-indigo-100",
    "bg-pink-100",
    // Border colors
    "border-gray-200",
    "border-gray-300",
    "border-red-200",
    "border-red-300",
    "border-yellow-200",
    "border-yellow-300",
    "border-neutral-300",
    "border-orange-200",
    "border-orange-300",
    "border-blue-200",
    "border-blue-300",
    "border-purple-200",
    "border-purple-300",
    "border-green-200",
    "border-green-300",
    "border-indigo-200",
    "border-indigo-300",
    "border-pink-200",
    "border-pink-300",
    // Hover states
    "hover:border-orange-300",
    "hover:border-blue-300",
    "hover:border-purple-300",
    "hover:border-green-300",
    "hover:border-indigo-300",
    "hover:border-pink-300",
    "hover:bg-orange-100",
    "hover:bg-blue-100",
    "hover:bg-purple-100",
    "hover:bg-green-100",
    "hover:bg-indigo-100",
    "hover:bg-pink-100",
    // Flex and layout classes that might be conditional
    "flex",
    "block",
    "hidden",
    "inline",
    "inline-block",
    "grid",
    "grid-cols-1",
    "grid-cols-2",
    "grid-cols-3",
    "grid-cols-4",
    // Common responsive classes
    "sm:block",
    "sm:hidden",
    "md:block",
    "md:hidden",
    "lg:block",
    "lg:hidden",
    "sm:grid-cols-2",
    "md:grid-cols-3",
    "lg:grid-cols-4",
    // Animation classes for lazy-loaded components
    "animate-bounce",
    "animate-spin",
    "animate-pulse",
    "animate-ping",
    // Shadow classes for components
    "shadow-sm",
    "shadow-md",
    "shadow-lg",
    "shadow-xl",
    "shadow-2xl",
    "hover:shadow-md",
    "hover:shadow-lg",
    "hover:shadow-xl",
    "hover:shadow-2xl",
    // Transform classes
    "transform",
    "hover:scale-105",
    "hover:-translate-y-1",
    "transition-all",
    "transition-colors",
    "transition-transform",
    "transition-shadow",
    "duration-200",
    "duration-300",
    "duration-500",
    // Gradient classes
    "bg-gradient-to-r",
    "bg-gradient-to-br",
    "from-orange-600",
    "to-red-600",
    "from-gray-900",
    "via-gray-800",
    "to-turquoise-900",
    // Additional colors for lazy components
    "bg-gray-800",
    "bg-gray-900",
    "text-gray-200",
    "text-gray-300",
    "text-white",
    "from-orange-50",
    "via-white",
    "to-gray-50",
    "from-orange-500",
    "to-red-500",
    "from-green-500",
    "text-green-500",
    "bg-green-500/20",
    // Ring and focus states
    "focus:ring-2",
    "focus:ring-orange-500/20",
    "focus:border-orange-500",
  ],
  theme: {
    extend: {
      colors: {
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        turquoise: {
          500: "#40E0D0",
          600: "#35C4B5",
          700: "#2AA89A",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        chart: {
          "1": "hsl(var(--chart-1))",
          "2": "hsl(var(--chart-2))",
          "3": "hsl(var(--chart-3))",
          "4": "hsl(var(--chart-4))",
          "5": "hsl(var(--chart-5))",
        },
        sidebar: {
          DEFAULT: "hsl(var(--sidebar-background))",
          foreground: "hsl(var(--sidebar-foreground))",
          primary: "hsl(var(--sidebar-primary))",
          "primary-foreground": "hsl(var(--sidebar-primary-foreground))",
          accent: "hsl(var(--sidebar-accent))",
          "accent-foreground": "hsl(var(--sidebar-accent-foreground))",
          border: "hsl(var(--sidebar-border))",
          ring: "hsl(var(--sidebar-ring))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: {
            height: "0",
          },
          to: {
            height: "var(--radix-accordion-content-height)",
          },
        },
        "accordion-up": {
          from: {
            height: "var(--radix-accordion-content-height)",
          },
          to: {
            height: "0",
          },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
};
export default config;
